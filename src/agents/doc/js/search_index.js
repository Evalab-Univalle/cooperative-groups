var search_data = {"index":{"searchIndex":["analysis","animal","assortment","dbconnection","environment","geneticalgorithm","graphic","model","object","plant","statistics","aboutassortment()","beeaten()","calculateassortment()","connect()","connectdb()","connectdb()","connectdb()","covariance()","creategridspace()","eat()","eatplant()","expectedvalue()","fillgridspace()","findall()","fitness()","graphicanalysis()","graphicassortment()","grow()","growplants()","logisticrate=()","makechart()","makelinechart()","makescatterplot()","maxsize=()","meassureassortment()","metaboliccost()","metaboliccost=()","move()","moveanimal()","moveanimals()","moveanyplace()","movenewplant()","mutate()","mutate()","new()","new()","new()","new()","new()","new()","oneunitassortment()","regressioncoeficient()","regressioncoeficientleastsquares()","replace()","replace()","run()","run()","select()","standarddeviation()","validate()","variance()","writeagents()","writeanimal()","writeassortment()","writedatagroups()","writedatagroups()","writeplant()"],"longSearchIndex":["analysis","animal","assortment","dbconnection","environment","geneticalgorithm","graphic","model","object","plant","statistics","model#aboutassortment()","plant#beeaten()","analysis#calculateassortment()","dbconnection#connect()","analysis#connectdb()","assortment#connectdb()","model#connectdb()","statistics::covariance()","environment#creategridspace()","animal#eat()","environment#eatplant()","statistics::expectedvalue()","environment#fillgridspace()","dbconnection#findall()","animal#fitness()","analysis#graphicanalysis()","analysis#graphicassortment()","plant#grow()","environment#growplants()","plant::logisticrate=()","analysis#makechart()","graphic::makelinechart()","graphic::makescatterplot()","plant::maxsize=()","assortment#meassureassortment()","animal::metaboliccost()","animal::metaboliccost=()","animal#move()","environment#moveanimal()","environment#moveanimals()","environment#moveanyplace()","environment#movenewplant()","animal#mutate()","geneticalgorithm::mutate()","analysis::new()","animal::new()","assortment::new()","environment::new()","model::new()","plant::new()","assortment#oneunitassortment()","statistics::regressioncoeficient()","statistics::regressioncoeficientleastsquares()","environment#replace()","geneticalgorithm::replace()","environment#run()","model#run()","geneticalgorithm::select()","statistics::standarddeviation()","environment#validate()","statistics::variance()","model#writeagents()","dbconnection#writeanimal()","dbconnection#writeassortment()","dbconnection#writedatagroups()","model#writedatagroups()","dbconnection#writeplant()"],"info":[["Analysis","","Analysis.html","","<p>Description\n<p>Used to make analysis about the assortment\n"],["Animal","","Animal.html","","<p>Description\n<p>Agent that can be one of two types: altruist (eats less than 50% of the\nplant&#39;s energy) …\n"],["Assortment","","Assortment.html","","<p>Description\n<p>Used to measure the assortment in every time unit\n"],["DBConnection","","DBConnection.html","","<p>Description\n<p>Class to connect and make operatoions with the database\n"],["Environment","","Environment.html","","<p>Description\n<p>Is the squared environment of the model\n"],["GeneticAlgorithm","","GeneticAlgorithm.html","","<p>Description\n<p>Class to make a population evolve\n<p>The chromosome must implement the methods: fitness and mutate …\n"],["Graphic","","Graphic.html","","<p>Description\n<p>Class to make charts\n"],["Model","","Model.html","","<p>Description\n<p>Is the model itself\n"],["Object","","Object.html","",""],["Plant","","Plant.html","","<p>Description\n<p>Agent that only grow according to the logistic function explained on the\ndocument\n"],["Statistics","","Statistics.html","","<p>Description\n<p>Used to calculate some statistics values\n"],["aboutAssortment","Model","Model.html#method-i-aboutAssortment","(executionTime, timeUnit)","<p>Calculates the variables for after analyse the assortment\n<p>executionTime &mdash; execution time\n<p>timeUnit &mdash; time unit …\n"],["beEaten","Plant","Plant.html#method-i-beEaten","(amount)","<p>When an animal eats part of the plant\n<p>amount &mdash; quantity eaten\n\n"],["calculateAssortment","Analysis","Analysis.html#method-i-calculateAssortment","()","<p>Calculates the assortment in all time units and all executions\n"],["connect","DBConnection","DBConnection.html#method-i-connect","()","<p>Connect to the database\n"],["connectDB","Analysis","Analysis.html#method-i-connectDB","()","<p>Connect to de database\n"],["connectDB","Assortment","Assortment.html#method-i-connectDB","()","<p>Connect to de database\n"],["connectDB","Model","Model.html#method-i-connectDB","()","<p>Connect to de database\n"],["covariance","Statistics","Statistics.html#method-c-covariance","(xValues, yValues)","<p>Calculates the covariance between the variables\n<p>xValues &mdash; independent variable\n<p>yValues &mdash; dependent variable …\n"],["createGridSpace","Environment","Environment.html#method-i-createGridSpace","(numPatchesRow, widthPatch, gapPatch)","<p>Creates the grid according to the rows of patches.\n<p>numPatchesRow &mdash; number of rows in terms of patches\n<p>widthPatch … &mdash; "],["eat","Animal","Animal.html#method-i-eat","(amount)","<p>To earn energy\n<p>amount &mdash; quantity of energy\n\n"],["eatPlant","Environment","Environment.html#method-i-eatPlant","(animal)","<p>Eat a plant\n<p>animal &mdash; the animal that is going to eat\n\n"],["expectedValue","Statistics","Statistics.html#method-c-expectedValue","(values)","<p>Calculates the average of the numbers\n<p>xValues &mdash; array with the values\n\n"],["fillGridSpace","Environment","Environment.html#method-i-fillGridSpace","(amountAnimals)","<p>Creates and places the animals in the grid\n<p>amountAnimals &mdash; Number of animals to create\n\n"],["findAll","DBConnection","DBConnection.html#method-i-findAll","(collection, query, options={})","<p>Find all the documents in the collection that satisfy the query\n<p>collection &mdash; collection name\n<p>query &mdash; query …\n"],["fitness","Animal","Animal.html#method-i-fitness","()","<p>Fitness, it will be used by GeneticAlgorithm\n"],["graphicAnalysis","Analysis","Analysis.html#method-i-graphicAnalysis","(fileName)","<p>Make a chart of the assortment observed minus the expected under  random\ndistribution, with average and …\n"],["graphicAssortment","Analysis","Analysis.html#method-i-graphicAssortment","(fileName)","<p>Make a chart of the assortment observed values, with average and standard\ndeviations\n<p>fileName &mdash; the name …\n\n"],["grow","Plant","Plant.html#method-i-grow","()","<p>Growth function given by the logistic curve on the paper\n"],["growPlants","Environment","Environment.html#method-i-growPlants","()","<p>Grow each plant\n"],["logisticRate=","Plant","Plant.html#method-c-logisticRate-3D","(val)","<p>Set the logistic rate for the growth function\n<p>val &mdash; value to the logistic rate\n\n"],["makeChart","Analysis","Analysis.html#method-i-makeChart","(assortment , plusOneSD , minusOneSD , fileName)","<p>Makes the chart of the assortment and the standard deviations\n<p>assortment &mdash; array with the assortment values …\n"],["makeLineChart","Graphic","Graphic.html#method-c-makeLineChart","(limX, limY, yPossibleValues, data, fileName, labelX, labelY)","<p>Make a multiple linechart\n<p>limX &mdash; maximum value on x axis\n<p>limY &mdash; maximum value on y axis\n"],["makeScatterplot","Graphic","Graphic.html#method-c-makeScatterplot","(data, fileName, limX, limY, labelX, labelY)","<p>Make a scatterplot chart.\n<p>data &mdash; an OpenStruct array with values for x, y and z\n<p>fileName &mdash; the name for the …\n"],["maxSize=","Plant","Plant.html#method-c-maxSize-3D","(val)","<p>Set the maximum size of the plants\n<p>val &mdash; maximum value\n\n"],["meassureAssortment","Assortment","Assortment.html#method-i-meassureAssortment","()","<p>Writes in the database the assortment value for every time unit\n"],["metabolicCost","Animal","Animal.html#method-c-metabolicCost","()","<p>Returns the value of the metabolic cost\n"],["metabolicCost=","Animal","Animal.html#method-c-metabolicCost-3D","(val)","<p>Set the metabolic cost for the animals\n<p>val &mdash; new metabolic cost value\n\n"],["move","Animal","Animal.html#method-i-move","(newX, newY)","<p>Move to a new cell in the grid\n<p>newX &mdash; new x position\n<p>newY &mdash; new y position\n"],["moveAnimal","Environment","Environment.html#method-i-moveAnimal","(animal, newX, newY)","<p>Moves the animal to a new position\n<p>animal &mdash; the animal to move\n<p>newX &mdash; new x position\n"],["moveAnimals","Environment","Environment.html#method-i-moveAnimals","()","<p>Move and feed each animal\n"],["moveAnyPlace","Environment","Environment.html#method-i-moveAnyPlace","(animal)","<p>Moves the animal to a neighbor position without another animal\n<p>animal &mdash; the animal to move\n\n"],["moveNewPlant","Environment","Environment.html#method-i-moveNewPlant","(animal)","<p>Find the best plant that has at least the metabolic cost and moves the\nanimal to it.\n<p>animal &mdash; the animal …\n\n"],["mutate","Animal","Animal.html#method-i-mutate","()","<p>Mutation, it will be used by GeneticAlgorithm\n"],["mutate","GeneticAlgorithm","GeneticAlgorithm.html#method-c-mutate","(population, mutationRate)","<p>Mutation: Mutate over the mating pool array\n<p>population &mdash; array with the mating pool\n<p>mutationRate &mdash; percent …\n"],["new","Analysis","Analysis.html#method-c-new","(executionTimes, timeUnits)","<p>Creates new object.\n<p>executionTime &mdash; how many executions were made\n<p>timeUnits &mdash; how many time units had each …\n"],["new","Animal","Animal.html#method-c-new","(posX, posY, group, identifier, energy=rand(10).to_f, feedRatePercent=rand)","<p>Inserts a new animal. When it appears in a generation different than the 0,\nit has its own energy and …\n"],["new","Assortment","Assortment.html#method-c-new","(executionTime, timeUnits)","<p>Creates new object.\n<p>executionTime &mdash; how many executions were made\n<p>timeUnits &mdash; how many time units had each …\n"],["new","Environment","Environment.html#method-c-new","(width, gap, minPlants, maxEnergyPlants, plantsRate, metabolicCost, amountAnimals)","<p>Creates a new environment\n<p>width &mdash; width of each patch (group) of plants in cells\n<p>gap &mdash; gap between patches …\n"],["new","Model","Model.html#method-c-new","(executionTime, width=4, gap=10, minPlants=1000, maxEnergyPlants=10, plantsRate=0.2, metabolicCost=2, amountAnimals=80)","<p>Receives the parameters to initialize the environment and  the number of\nthe current execution. The default …\n"],["new","Plant","Plant.html#method-c-new","(posX, posY, group, identifier)","<p>Creates a new plant\n<p>posX &mdash; x position on the grid\n<p>posY &mdash; y position on the grid\n"],["oneUnitAssortment","Assortment","Assortment.html#method-i-oneUnitAssortment","(timeUnit)","<p>Calculates the assortment for ona time unit\n<p>timeUnit &mdash; the number of the time unit to analyse\n\n"],["regressionCoeficient","Statistics","Statistics.html#method-c-regressionCoeficient","(xValues, yValues)","<p>Calculates the regression coeficient\n<p>xValues &mdash; independent variable\n<p>yValues &mdash; dependent variable\n"],["regressionCoeficientLeastSquares","Statistics","Statistics.html#method-c-regressionCoeficientLeastSquares","(xValues, yValues)","<p>Calculates the regression coeficient by the least squares method\n<p>xValues &mdash; independent variable\n<p>yValues &mdash; "],["replace","Environment","Environment.html#method-i-replace","(toDelete, toAdd)","<p>Evolutive section:\n<p>Deletes from the grid the animals in the toDelete array\n<p>Places in the grid the animals …\n"],["replace","GeneticAlgorithm","GeneticAlgorithm.html#method-c-replace","(population, pool, sizeRequired)","<p>Replacement: Returns an array with the chromosomes to delete from the\npopulation  and also deletes them …\n"],["run","Environment","Environment.html#method-i-run","()","<p>Run one time unit\n"],["run","Model","Model.html#method-i-run","(timeUnits)","<p>Run the model\n<p>timeUnits &mdash; how many time units\n\n"],["select","GeneticAlgorithm","GeneticAlgorithm.html#method-c-select","(totalPopulation, poolSizePercent)","<p>Selection:\n<p>totalPopulation &mdash; array with the population\n<p>poolSizePercent &mdash; percent of the population to select …\n"],["standardDeviation","Statistics","Statistics.html#method-c-standardDeviation","(values)","<p>Calculates the standard deviation of the numbers\n<p>xValues &mdash; array with the values\n\n"],["validate","Environment","Environment.html#method-i-validate","(pos)","<p>Validates a position. The environment is cyclic\n"],["variance","Statistics","Statistics.html#method-c-variance","(values)","<p>Calculates the variance of the numbers\n<p>xValues &mdash; array with the values\n\n"],["writeAgents","Model","Model.html#method-i-writeAgents","(executionTime, timeUnit)","<p>Writes in the database the information about plants and animals\n<p>executionTime &mdash; execution time\n<p>timeUnit &mdash; "],["writeAnimal","DBConnection","DBConnection.html#method-i-writeAnimal","(executionTime, timeUnit, animal)","<p>Write an animal\n<p>executionTime &mdash; execution time\n<p>timeUnit &mdash; time unit\n"],["writeAssortment","DBConnection","DBConnection.html#method-i-writeAssortment","(executionTime, timeUnit, meassure)","<p>Write the assortment\n<p>executionTime &mdash; execution time\n<p>timeUnit &mdash; time unit\n"],["writeDataGroups","DBConnection","DBConnection.html#method-i-writeDataGroups","(executionTime, timeUnit, altruist, selfish, group)","<p>Write information about the groups\n<p>executionTime &mdash; execution time\n<p>timeUnit &mdash; time unit\n"],["writeDataGroups","Model","Model.html#method-i-writeDataGroups","(executionTime, timeUnit, altruists, selfish, group)","<p>Writes in the database the groups&#39; composition\n<p>executionTime &mdash; execution time\n<p>timeUnit &mdash; time unit\n"],["writePlant","DBConnection","DBConnection.html#method-i-writePlant","(executionTime, timeUnit, plant)","<p>Write a plant\n<p>executionTime &mdash; execution time\n<p>timeUnit &mdash; time unit\n"]]}}